<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<ui:composition template="/template/layout.xhtml" 
		xmlns:p="http://primefaces.org/ui"
		xmlns:ui="http://java.sun.com/jsf/facelets"
		xmlns:h="http://java.sun.com/jsf/html"
		xmlns:f="http://java.sun.com/jsf/core"
		xmlns:sh="http://java.sun.com/jsf/composite/components">
    <ui:define name="content">
    
    	<div class="well">
    		<h2>Proof of concept mode</h2>
    	</div>
    	
    	<div class="shimmerVisualisation panel panel-default">
			<div class="panel-heading">
				<h3 class="panel-title">Sample project visualiztion</h3>
			</div>
			<div class="panel-body">
			
			<p:outputPanel id="shimmerSimulation">
				
				<div id="shimmerContainer">
				
					<div id="shimmerHeatmap"></div>
					<div id="shimmerNetwork"></div>
					
					<div id="shimmerPanel" class="panel panel-primary">
						<div class="panel-heading">
							Visualisation panel <sh:calculatingIndicatior />
						</div>
						<div class="panel-body">
							<div>
								Visualisation Mode: <span id="visualisationMode" class="label label-primary">Constellation Mode</span>
							</div>
							<div>
								<button class="btn btn-success btn-sm width-full margin-top" 
									onclick="Shimmer.toggleHeatmap();">Change Mode</button>
							</div>
							<div>
								<h:form>
									<p:outputLabel for="sizeMetricField" value="Node size metric" />
									<p:selectOneButton id="sizeMetricField" 
											value="#{simulationController.properties.nodeSizeMetric}">
										<f:selectItems value="#{enumSelectItemsProvider.metrics}" />
										<p:ajax event="change" global="true"
											listener="#{simulationController.generateGraph}"
											update="@([id$=dataScript])" 
											onstart="ShimmerWeb.show('calculatingStatus');"
											oncomplete="ShimmerWeb.hide('calculatingStatus');Shimmer.reloadData();" />
									</p:selectOneButton>
								</h:form>
							</div>
						</div>
					</div>
				</div>
				
				<div id="shimmerProject" class="panel panel-success">
					<div class="panel-heading">
						Project data
					</div>
					<div class="panel-body" id="shimmerInfo">
						<div>
							<label class="packageName badge badge-primary"></label>
						</div>
						
						<div>
							<label>Class count:</label>
							<span class="classCount badge"></span>
						</div>
						
						<div>
							<label>Concrete:</label>
							<span class="concreteClassesCount badge"></span>
							
							<label>Abstract:</label>
							<span class="abstractClassesCount badge"></span>
						</div>
						
						<div>
							<label>Abstractness:</label>
							<span class="abstractness badge"></span>
						</div>
						
						<div>
							<label>Efferents:</label>
							<span class="efferentsCount badge"></span>
							
							<label>Afferents:</label>
							<span class="afferentsCount badge"></span>
						</div>
						
						<div>
							<label>Instability:</label>
							<span class="instability badge"></span>
						</div>
						
						<div>
							<label>Distance from main sequence:</label>
							<span class="distanceFromMainSequence badge"></span>
						</div>
					</div>
				</div>
				
			</p:outputPanel>	
			</div>
		</div>
		
		<!-- This field is updated every time the data changes -->
		<p:outputPanel id="dataScript">
			<script type="text/javascript">
			/* <![CDATA[ */
			
				// Nodes and edges
				var nodes = #{simulationController.nodesJSON}
				var edges = #{simulationController.edgesJSON}
			    
				Shimmer.data = {
					nodes: nodes,
					edges: edges
				};
				
			/* ]]> */
			</script>
		</p:outputPanel>
		
		<!-- This is standard script field -->
		<script type="text/javascript">
		/* <![CDATA[ */
		
			// Simulation settings
			Shimmer.width = 800;
			Shimmer.height = 650;
			Shimmer.nodesCount = #{simulationController.nodesCount};

			// Create a network and heatmap
			Shimmer.networkContainer = document.getElementById('shimmerNetwork');
			Shimmer.heatmapContainer =  document.getElementById('shimmerHeatmap');
			Shimmer.createNetwork();
			Shimmer.createHeatmap();
			
			Shimmer.updateHeatmap();
		  
			// Assign listeners
			Shimmer.network.on('viewChanged', Shimmer.updateHeatmap);
			Shimmer.network.on('startStabilization', Shimmer.startUpdatingHeatmap);
			Shimmer.network.on('stabilized', Shimmer.stopUpdatingHeatmap);
			Shimmer.network.on('select', Shimmer.nodeSelectCallback);
			
			/* ]]> */
		</script>
    </ui:define>
</ui:composition>
</html>